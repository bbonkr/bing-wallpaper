name: create release
on:
  push:
    tags:
      # v1.0.0
      - "v[0-9]+.[0-9]+.[0-9]+" 
      # v1.0.0-alpha.1
      - "!v[0-9]+.[0-9]+.[0-9]+-[a-zA-Z]+.[0-9]+" 

jobs:
  release:
    name: create release 
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: build ClientApp
        run: |
          cd src/Bing.Wallpaper/ClientApp
          npm ci
          npm run build

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Release 
        id: release_drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          version: ${{ github.ref_name }}
          publish: false 
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Notify to slack
        uses: 8398a7/action-slack@v3
        if: always() # Pick up events even if the job fails or is canceled. 
        with:
          job_name: release
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT:  ${{ toJson(matrix) }}

      - name: Notify to Microsoft Teams
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}    